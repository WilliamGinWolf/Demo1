}
FunctionName<-function(a b){
c = a*b;
return(c)
}
FunctionName<-function(a,b){
c = a*b;
return(c)
}
FunctionName(1,2)
FunctionName(3,2)
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Class Of Me")
cs<-read.xlsx("ques.xlsx","result")
library(xlsx)
library(jiebaR)
library(wordcloud)
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Class Of Me")
cs<-read.xlsx("ques.xlsx","result")
View(cs)
typeof(cs)
cs$Q2
cs[1,]
typeof(cs)
typeof(cs$Q2)
typeof(cs$客户名称)
is.character(cs$Q2)
is.character(cs$邮箱)
as.integer(as.character(cs$Q2))
cs$Q2<-as.integer(as.character(cs$Q2))
cs[which(cs$Q5_QOpen=="null")]
cs[which(cs$Q2>7)]
cs$Q2[which(cs$Q2>7)]
median(cs$Q2)
cs$Q2
a<-cs$Q2
meidan(a)
median(a)
mean(a)
cs[which(cs$Q5_QOpen)=="null"]<-""
cs[which(cs$Q5_QOpen=="null")]<-""
cs<-read.xlsx("ques.xlsx","result")
View(cs)
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-""
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-"0"
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-"1"
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-as.character("")
which(cs$Q5_QOpen=="null")
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]
cs$Q33_QOpen[which(cs$Q33_QOpen=="null")]<-as.factor("")
cs$Q33_QOpen[which(cs$Q33_QOpen=="null")]<-
""
cs$Q33_QOpen[which(cs$Q33_QOpen=="null")]<-c("")
is.null
is.null(cs$Q5_QOpen)
typeof(cs$Q5_QOpen)
cs$Q33_QOpen[which(cs$Q33_QOpen=="null")]
cs$Q33_QOpen[which(cs$Q33_QOpen="null")]
cs$Q33_QOpen=="null"
is.na(cs$Q33_QOpen=="null"))
is.na(cs$Q33_QOpen=="null")
cs$Q33_QOpen[which(is.na(cs$Q33_QOpen=="null"))]
cs$Q33_QOpen[which(is.na(cs$Q33_QOpen=="null"))]<-""
cs$Q33_QOpen[which(is.na(cs$Q33_QOpen=="null"))]
cs$Q33_QOpen[is.na(cs$Q33_QOpen=="null")]
c[cs$Q2]
c(which(is.na(cs$Q33_QOpen=="null")))]
which(is.na(cs$Q33_QOpen=="null"))
which(is.na(cs$Q33_QOpen=="null"))<-""
which(is.na(cs$Q33_QOpen=="null")) <- ""
cs[which(is.na(cs$Q33_QOpen=="null"))]
cs$Q33_QOpen[which(is.na(cs$Q33_QOpen=="null"))]
cs$Q33_QOpen[c(which(is.na(cs$Q33_QOpen=="null")))]
cs$Q33_QOpen[which(is.na(cs$Q33_QOpen=="null"))]
cs$Q33_QOpen[which(cs$Q33_QOpen=="null")]
which(cs$Q33_QOpen=="null")
which(cs$Q33_QOpen=="null")
cs$Q33_QOpen == "null"
?which
cs$Q33_QOpen[which(cs$Q33_QOpen == null)]
cs$Q33_QOpen[which(cs$Q33_QOpen == 'null')]
which(cs$Q33_QOpen == 'null')
cs$Q33_QOpen == 'null'
cs$Q2<-as.integer(as.character(cs$Q2))
cs[which(cs$Q33_QOpen == "null")]
View(cs[which(cs$Q33_QOpen == "null")])
cs$Q5_QOpen[]
is.na(cs$Q5_QOpen[])
is.na(cs$Q5_QOpen[])<-""
cs$Q5_QOpen[] == "NA"
which(is.na(cs$Q5_QOpen[]))
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen[]))]
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen[]))]<-""
cs$Q5_QOpen[,which(is.na(cs$Q5_QOpen[]))]<-""
which(is.na(cs$Q5_QOpen[]))
which(is.na(cs$Q5_QOpen[]))<-""
which(is.na(cs$Q5_QOpen))
c[which(is.na(cs$Q5_QOpen))]
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]
cs[which(cs$Q5_QOpen=="null")]
cs<-read.xlsx("ques.xlsx","result")
as.integer(as.character(cs$Q2))
cs$Q2<-as.integer(as.character(cs$Q2))
cs[which(cs$Q5_QOpen=="null")]
cs$Q2[which(cs$Q2>7)]
cs$Q2[which(cs$Q5_QOpen=="null")]
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-""
subset(cs,cs$Q33_QOpen="null")
library(xlsx)
library(jiebaR)
library(wordcloud)
#设置工作路径
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Class Of Me")
#读取xlsx文件，第一个“”中为当前工作路径下的xlsx文件名，第二个“”中为该xlsx中你想要的那张表的名字
cs<-read.xlsx("ques.xlsx","result")
#查看我们得到的表
View(cs)
cs$Q5_QOpen[which(cs$Q5_QOpen)=="null"]
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-0
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-"0"
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)]<-"0"
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-"0"
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-"0"
which(is.null(cs$Q5_QOpen))
which(is.null(cs$Q5_QOpen))
which(is.na(cs$Q5_QOpen))
c[which(is.na(cs$Q5_QOpen))]
a<-which(is.na(cs$Q5_QOpen))
a
cs$Q5_QOpen[a]
c[a]
typeof
typeof(a)
typeof(a[1])
cs$Q5_QOpen[1]
cs$Q5_QOpen[1],
cs$Q5_QOpen[1,]
cs$Q5_QOpen[,1]
cs$Q5_QOpen(1)
cs$Q5_QOpen[]
cs[1]
cs[1,1]
cs[1,]
cs$Q5_QOpen
cs$Q5_QOpen[1]
cs$Q5_QOpen[1,]
cs$Q5_QOpen[a]
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-"0"
library(xlsx)
cs<-read.xlsx("ques.xlsx","result")
View(cs)
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-"0"
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-"0"
cs$Q5_QOpen[a]
cs$Q5_QOpen[]
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-"0"
cs$Q5_QOpen[1]
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]
which(is.null(cs$Q5_QOpen))
which(is.na(cs$Q5_QOpen))
which(cs$Q5_QOpen=="null")
which(cs$Q5_QOpen=="null")<-""
[which(cs$Q5_QOpen=="null")]<-""
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-""
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-""
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
View(cs)
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
cs$Q5_QOpen[is.na(cs$Q5_QOpen)]<-0
is.na(cs$Q5_QOpen)
which(is.na(cs$Q5_QOpen))
cs[which(is.na(cs$Q5_QOpen))]
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-"0"
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-"0"
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-c(0)
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-seq(1,100)
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-seq(1,ncol(cs))
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-seq(1,nrow(cs))
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]<-"0"
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]<
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]
cs[is.na(cs)]<-0
cs[is.na(cs)] <- 0
cs[is.na(cs)] <- 0
typeof
typeof(cs)
cs<-as.data.frame(cs)
typeof(cs)
cs[is.na(cs)] <- 0
cs<-read.xlsx("ques.xlsx","result",stringAsFactors = FALSE)
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen)),]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.na(cs$Q5_QOpen))]<-"0"
View(cs)
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-0
cs$Q5_QOpen[which(is.null(cs$Q5_QOpen))]<-0
View(cs)
which(is.null(cs$Q5_QOpen))
which(is.na(cs$Q5_QOpen))
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-0
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-0
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]<-0
cs$Q5_QOpen<-as.character(cs$Q5_QOpen)
View(cs)
which(is.na(cs$Q5_QOpen))
cs[is.na(cs)]<-0
View(cs)
typeof(cs$Q2)
typeof(cs$客户名称)
is.character(cs$Q2)
is.character(cs$邮箱)
typeof(cs$Q2)
cs$Q2[1]
cs$Q2[1]+cs$Q2[1]
cs[which(cs$Q5_QOpen=="null")]
cs$Q2[which(cs$Q2>7)]
cs$Q2[which(cs$Q2>7)]
cs$Q5_QOpen[which(cs$Q5_QOpen=="null")]
setwd("/Users/apple/Desktop")
chi<-read.table("chi.txt",sep = "\n")
View(chi)
eng<-read.table("eng.txt",sep="\n")
nrow(eng)
c<-rbind(eng,chi)
View(c)
c<-cbind(eng,chi)
write.csv("word.csv")
write.csv(c,file = "word.csv")
shiny::runApp('Documents/i work/about codes/Taiwan/Competition')
library(shiny)
library(slidify)
runDeck()
install.packages(slidify)
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
library(slidify)
runDeck()
runDeck()
require(googleVis)
M1 <- gvisMotionChart(Fruits, idvar = 'Fruit', timevar = 'Year')
print(M1, tag = 'chart')
view_deck()
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo")
library(slidify)
library(slidifyLibraries)
runDeck()
install.packages("webshot")
library(webshot)
runDeck()
runDeck()
runDeck()
library(knitr)
runDeck()
runDeck()
runDeck()
runDeck()
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/ramnathv-slidifyExamples-88aff7f/examples/deckjs")
runDeck()
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/ramnathv-slidifyExamples-88aff7f/examples/deckjs")
runDeck()
runDeck()
runDeck()
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/impressjs")
rundeck
runDeck()
install.packages( XQuartz)
install.packages("XQuartz")
library(slidify)
library(slidifyLibraries)
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/impressjs")
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/impressjs/")
original<-read.csv("original.csv")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(googleVis)
original<-read.csv("20150108.csv")
by1<-aggregate(original$人數,by=list(original$車次,original$下車站),sum)
names(by1)<-c("Train","Station","Man")
b1<-gvisBubbleChart(by1,idvar = "Train",sizevar = "Man")  #,options=list(width=1500, height=700)
plot(b1)
runDeck()
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/")
warnings()
runDeck()
require(googleVis)
M1 <- gvisMotionChart(Fruits, idvar = 'Fruit', timevar = 'Year')
print(M1, tag = 'chart')
runDeck()
install.packages("opencpu")
library(opencpu)
cat("\014")
suppressPackageStartupMessages(library(googleVis))
setwd("/Users/apple/Documents/i work/about codes/Taiwan/R language/Demo/impressjs/")
source('~/Documents/i work/about codes/Taiwan/R language/Demo/impressjs/apps/app1.R')
runDeck()
runDeck()
library(slidifyLibraries)
library(slidify)
slidifyUI(
titlePanel("上傳檔案："),
sidebarPanel(
#selectInput('sex', 'Choose Sex', c('Male', 'Female')),
#selectInput('type', 'Choose Type',
#c('multiBarChart', 'multiBarHorizontalChart')
fileInput('file1', '请上传相应的xls檔案',),
tags$hr(),
downloadButton('downloadData', 'Download')
),
mainPanel(
tableOutput('contents')
)
)
original<-read.csv("20150108.csv")
by1<-aggregate(original$人數,by=list(original$車次,original$下車站),sum)
names(by1)<-c("Train","Station","Man")
require(googleVis)
b1<-gvisBubbleChart(by1,idvar = "Train",sizevar = "Man",options=list(width=1200, height=700))
plot(b1,tag = 'chart')
original<-read.csv("20150108.csv")
by1<-aggregate(original$人數,by=list(original$車次,original$下車站),sum)
names(by1)<-c("Train","Station","Man")
require(googleVis)
b1<-gvisBubbleChart(by1,idvar = "Train",sizevar = "Man",options=list(width=1200, height=700))
plot(b1,tag = 'chart')
original<-read.csv("original.csv")
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(googleVis))
setwd("~/Documents/i work/about codes/Taiwan/R language/Demo/impressjs")
setwd("~/Documents/i work/about codes/Taiwan/R language/Demo/impressjs")
install_github('rNVD3', 'ramnathv')
require(devtools)
install_github('rNVD3', 'ramnathv')
install.packages("rNVD3")
install_github('rNVD3',ramnathv/rNVD3)
install_github('rNVD3',"ramnathv/rNVD3")
library("rNVD3", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data(tips, package="reshape2")
require(data.table)
tipsDT <- data.table(tips)
str(tipsDT)
tipsDT
zz <- tipsDT["No", list(size,tipSum=sum(tip)), by=list(day, time, sex)]
x <- sample(x = 1:100, size = 100, replace = TRUE)
x
mean(x)
y <- x
y <- x
y[sample(x = 1:100, size = 20, replace = FALSE)] <- NA
y
sample(x = 1:100, size = 20, replace = FALSE)
sample(x = 1:100, size = 20, replace = FALSE)
mean(y)   # NA?
mean(y, na.rm = TRUE)
y[sample(x = 1:100, size = 20, replace = FALSE)] <- NA
mean(y, na.rm = TRUE)
mean(y, na.rm = TRUE)
y[sample(x = 1:100, size = 20, replace = FALSE)] <- NA
mean(y, na.rm = TRUE)
y[sample(x = 1:100, size = 20, replace = FALSE)] <- NA
mean(y, na.rm = TRUE)
grades <- c(95, 72, 87, 66)
weights <- c(1/2, 1/4, 1/8, 1/8)
mean(grades)
weighted.mean(x = grades, w = weights)
var(y)  # NA?
var(y, na.rm=TRUE)
var(x)
sum((x - mean(x))^2)/(length(x) - 1)
sqrt(var(x))
sd(x)
sd(y, na.rm = TRUE)
(sd(y, na.rm = TRUE))^2
quantile(x, probs = c(0.25, 0.75))
quantile(y, probs = c(0.25, 0.75))  # NA?
quantile(y, probs = c(0.25, 0.75), na.rm = TRUE)
quantile(x, probs = c(0.1, 0.25, 0.5, 0.75, 0.99))
head(economics)
?economics
??economics
library(ggplot2)
head(economics)
cor(economics$pce, economics$psavert)
xPart <- economics$pce - mean(economics$pce)
yPart <- economics$psavert - mean(economics$psavert)
nMinusOne <- (nrow(economics) - 1)
xSD <- sd(economics$pce)
ySD <- sd(economics$psavert)
xPart
nMinusOne
sum(xPart * yPart) / (nMinusOne * xSD * ySD)
xPart * yPart
xSD
ySD
str(economics)
econCor <- cor(economics[, c(2, 4:6)])
cor(economics[, c(2, 4:6)])
cor(economics)
cor(economics[,])
cor(economics[,c[1:6]])
econCor
econMelt <- melt(econCor, varnames=c("x", "y"), value.name="Correlation")
econMelt
econMelt <- econMelt[order(econMelt$Correlation), ]
econMelt
econMelt<-econMelt[-16,]
econMelt
econMelt<-econMelt[-15,]
econMelt<-econMelt[-15,]
econMelt
econMelt<-econMelt[-15,]
econMelt<-econMelt[-14,]
econMelt
econMelt<-econMelt[-13,]
econMelt
require(reshape2)
require(scales)
ggplot(econMelt, aes(x = x, y = y)) + geom_tile(aes(fill = Correlation)) +
scale_fill_gradient2(low = muted("blue"), mid = "white",
high = "red", space ="Lab",
guide = guide_colorbar(ticks = FALSE, barheight = 10),
limits = c(-1, 1)) + theme_minimal() +
labs(x = NULL, y = NULL)
econMelt <- econMelt[order(econMelt$Correlation), ]
ggplot(econMelt, aes(x = x, y = y)) + geom_tile(aes(fill = Correlation)) +
scale_fill_gradient2(low = muted("blue"), mid = "white",
high = "red", space ="Lab",
guide = guide_colorbar(ticks = FALSE, barheight = 10),
limits = c(-1, 1)) + theme_minimal() +
labs(x = NULL, y = NULL)
econMelt <- melt(econCor, varnames=c("x", "y"), value.name="Correlation")
ggplot(econMelt, aes(x = x, y = y)) + geom_tile(aes(fill = Correlation)) +
scale_fill_gradient2(low = muted("blue"), mid = "white",
high = "red", space ="Lab",
guide = guide_colorbar(ticks = FALSE, barheight = 10),
limits = c(-1, 1)) + theme_minimal() +
labs(x = NULL, y = NULL)
m <- c(9, 9, NA, 3, NA, 5, 8, 1, 10)
n <- c(2, NA, 1, 6, 6, 4, 1, 1, 6)
p <- c(8, 4, 3, 9, 10, NA, 3, NA, 9)
q <- c(10, 10, 7, 8, 4, 2, 8, 5, 5)
theMat <- cbind(m, n, p, q)
#
theMat
cor(theMat, use = "everything")
cor(theMat, use = "all.obs")
cor1 <- cor(theMat, use = "complete.obs")
cor1
cor2 <- cor(theMat, use = "na.or.complete")
cor2
identical(cor1, cor2)
original<-read.csv("20150108.csv")
by1<-aggregate(original$人數,by=list(original$車次,original$下車站),sum)
names(by1)<-c("Train","Station","Man")
by1
View(by1)
theMat
cor(theMat, use = "all.obs")
cor(theMat, use = "pairwise.complete.obs")
cor(economics[, c(2, 4:6)])
View(economics)
cor(theMat, use = "pairwise.complete.obs")
cor(theMat[, c("m", "n")], use = "complete.obs")
cor(theMat[, c("m", "p")], use = "complete.obs")
cov(economics$pce, economics$psavert)
cov(economics[, c(2, 4:6)])
identical(cov(economics$pce, economics$psavert),
cor(economics$pce, economics$psavert) *
sd(economics$pce) * sd(economics$psavert))
wine.Data <- read.table("http://jaredlander.com/data/wine.csv", header = TRUE, sep = ",")
wine.Data <- read.table("http://jaredlander.com/data/wine.csv", header = TRUE, sep = ",")
head(wine)
head(wine.Data)
head(wine)
??wine
??gclus
library(gclus)
head(wine)
wine.Data
View(wine.Data)
wine.Train <- wine.Data[, -1]
wine.Kmean <- kmeans(x = wine.Train, centers = 3)
set.seed(9)
ans3 <- kmeans(x = wine.Train, centers = 3)
plot(ans3)
ans3
